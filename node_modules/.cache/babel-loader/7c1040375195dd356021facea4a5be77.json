{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Preparation\\\\Projects\\\\Flex-Yoga-Academy\\\\src\\\\components\\\\FormPage.js\";\nimport { YogaForm } from './forms/YogaForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormPage = () => {\n  const handleSubmit = async (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    console.log(values);\n    await new Promise(resolve => setTimeout(resolve, 500)); // alert(JSON.stringify(values, null, 2));  \n\n    axios.post('http://localhost/api/user/save', values); // axios.post('sql6.freesqldatabase.com/3306', values)\n\n    alert('Form Submitted Successfully !');\n    resetForm();\n  };\n\n  const formSchema = [{\n    name: 'name',\n    label: 'Name',\n    componentType: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    componentType: 'text',\n    required: true\n  }, {\n    name: 'gender',\n    label: 'Gender',\n    componentType: 'radioGroup',\n    options: [{\n      label: 'Male',\n      value: '1'\n    }, {\n      label: 'Female',\n      value: '0'\n    }]\n  }, {\n    name: 'age',\n    label: 'Age',\n    componentType: 'text',\n    required: true,\n    type: 'number',\n    min: 18,\n    max: 65,\n    step: 1\n  }, {\n    name: 'batch',\n    label: 'Batch',\n    componentType: 'select',\n    defaultOption: 'Select Batch',\n    options: [{\n      label: 'B1 : 06-07 Am',\n      value: 'B1'\n    }, {\n      label: 'B2 : 07-08 Am',\n      value: 'B2'\n    }, {\n      label: 'B3 : 08-09 Am',\n      value: 'B3'\n    }, {\n      label: 'B4 : 05-06 Pm',\n      value: 'B4'\n    }]\n  }, {\n    name: 'payment',\n    label: 'Payment',\n    componentType: 'select',\n    defaultOption: 'Select Payment',\n    options: [{\n      label: 'Pay Now',\n      value: '1'\n    }, {\n      label: 'Pay Later',\n      value: '0'\n    }]\n  }, // if payment is pay now then show this\n  {\n    name: 'pay',\n    label: 'Pay',\n    componentType: 'btn',\n    condition: {\n      key: 'payment',\n      value: '1',\n      operator: '='\n    },\n    required: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Yoga Class Admission Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form section\",\n        children: /*#__PURE__*/_jsxDEV(YogaForm, {\n          schema: formSchema,\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_c = FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"sources":["C:/Users/Dell/OneDrive/Desktop/Preparation/Projects/Flex-Yoga-Academy/src/components/FormPage.js"],"names":["YogaForm","axios","FormPage","handleSubmit","values","resetForm","console","log","Promise","resolve","setTimeout","post","alert","formSchema","name","label","componentType","required","options","value","type","min","max","step","defaultOption","condition","key","operator"],"mappings":"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","sourcesContent":["import { YogaForm } from './forms/YogaForm'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const FormPage = () => {\r\n\r\n    const handleSubmit =   async (values, {resetForm}) => {\r\n        console.log(values)\r\n        await new Promise((resolve) => setTimeout(resolve, 500));\r\n        // alert(JSON.stringify(values, null, 2));  \r\n        axios.post('http://localhost/api/user/save', values)\r\n        // axios.post('sql6.freesqldatabase.com/3306', values)\r\n        alert('Form Submitted Successfully !');\r\n        resetForm();\r\n      }\r\n    \r\n      const formSchema = [\r\n        { name: 'name', label: 'Name', componentType: 'text', required: true },\r\n        { name: 'email', label: 'Email', componentType: 'text', required: true },\r\n        {\r\n          name: 'gender',\r\n          label: 'Gender',\r\n          componentType: 'radioGroup',\r\n          options: [\r\n            { label: 'Male', value: '1' },\r\n            { label: 'Female', value: '0' },\r\n          ],\r\n        },\r\n        { name: 'age', label: 'Age', componentType: 'text', required: true, type: 'number', min: 18, max: 65, step: 1},\r\n        {\r\n          name: 'batch',\r\n          label: 'Batch',\r\n          componentType: 'select',\r\n          defaultOption: 'Select Batch',\r\n          options: [\r\n            { label: 'B1 : 06-07 Am', value: 'B1' },\r\n            { label: 'B2 : 07-08 Am', value: 'B2' },\r\n            { label: 'B3 : 08-09 Am', value: 'B3' },\r\n            { label: 'B4 : 05-06 Pm', value: 'B4' },\r\n          ],\r\n        },\r\n        {\r\n          name: 'payment',\r\n          label: 'Payment',\r\n          componentType: 'select',\r\n          defaultOption: 'Select Payment',\r\n          options: [\r\n            { label: 'Pay Now', value: '1' },\r\n            { label: 'Pay Later', value: '0' },\r\n          ],  \r\n        },\r\n        // if payment is pay now then show this\r\n        {\r\n          name: 'pay',\r\n          label: 'Pay',\r\n          componentType: 'btn',\r\n          condition: { key: 'payment', value: '1', operator: '=' },\r\n          required: true,\r\n        },\r\n      ]\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex\">\r\n                <h1>Yoga Class Admission Form</h1>\r\n                <div className=\"form section\">\r\n                    <YogaForm schema={formSchema} onSubmit={handleSubmit} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}